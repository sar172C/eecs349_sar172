Question 2

.text:00401500    push        ebp	(push ebp onto stack)
.text:00401501    mov         ebp, esp	(move esp into ebp register
.text:00401503    and         esp, 0FFFFFFF0h	(combines esp with hex value, restricting it to hexaecimal format)
.text:00401506    sub         esp, 40h	(value of esp - 40h)
.text:00401509    call        ___main	(Calls main function)
.text:0040150E    mov         dword ptr [esp+18h], 0Ch	([esp+18h] = 0ch(12))
.text:00401516    mov         dword ptr [esp+1Ch], 0Fh	([esp+1ch] = 0fh(15))
.text:0040151E    mov         dword ptr [esp+20h], 0DDh	([esp+20h] = 0DDh(221))
.text:00401526    mov         dword ptr [esp+24h], 3	([esp+24h] = 3(3))
.text:0040152E    mov         dword ptr [esp+28h], 1B0h	([esp+28h] = 1B0h(432))
.text:00401536    mov         dword ptr [esp+2Ch], 36h	([esp+2ch] = 36h(54))
.text:0040153E    mov         dword ptr [esp+30h], 10h	([esp+30h] = 10h(16))
.text:00401546    mov         dword ptr [esp+34h], 43h	([esp+34h] = 43h(67))
.text:0040154E    mov         dword ptr [esp+3Ch], 0	([esp+3Ch] = 0(0))
.text:00401556    mov         dword ptr [esp+38h], 0	([esp+38h] = 0(0))
.text:0040155E    jmp         short loc_40157F	(Jump to specified location)
.text:00401560 ; ------------------------------------------------------
.text:00401560
.text:00401560 loc_401560:             ; CODE XREF: _main+84↓j
.text:00401560    mov         eax, [esp+38h]	(move [esp+38] tp eax register)
.text:00401564    mov         eax, [esp+eax*4+18h]	(move [esp+eax*4+18h] to eax register)
.text:00401568    cmp         eax, [esp+3Ch]	(compare value of [esp+3Ch] with eax)
.text:0040156C    jle         short loc_40157A	(if value is less than [esp+eax*4+18h] jump to specified location)
.text:0040156E    mov         eax, [esp+38h]	(otherwise move [esp+38h] to eax register)
.text:00401572    mov         eax, [esp+eax*4+18h]	(move [esp+eax*4+18h] to eax register)
.text:00401576    mov         [esp+3Ch], eax	(move value in eax register to [esp+3ch])
.text:0040157A
.text:0040157A loc_40157A:             ; CODE XREF: _main+6C↑j
.text:0040157A    add         dword ptr [esp+38h], 1	(add 1 to [esp+38h])
.text:0040157F
.text:0040157F loc_40157F:             ; CODE XREF: _main+5E↑j
.text:0040157F    cmp         dword ptr [esp+38h], 7 (compare [esp+38h]  to number 7)
.text:00401584    jle         short loc_401560	(if value is less than 7 jump to specified location)
.text:00401586    mov         eax, [esp+3Ch]	(move value in [esp+3ch] to eax register)
.text:0040158A    mov         [esp+4], eax	(move value in eax register to [esp+4])
.text:0040158E    mov         dword ptr [esp], offset aD ; "%d"	(print first value in array)
.text:00401595    call        _printf	(call print command)
.text:0040159A    mov         eax, 0	(reset eax to 0)
.text:0040159F leave
.text:004015A0 retn
.text:004015A0 _main endp



int main(int argc, const char **argv, const char **envp){
 int x[] = {12, 15, 221, 3, 432, 54, 16, 7, 0, 0};
	while(x[9] < 7){
	if(x[9] > (-64 + (x[9] * 4)) x[8] = (-64 + (x[9] * 4 + 24);
	x[9]+=1;
	}
printf("%d", x[9]);
return;s






